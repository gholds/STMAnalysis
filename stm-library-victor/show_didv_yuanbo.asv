% show_didv(n)
% show dI/dV map of file mn_ori when n is the function input.

function show_didv(n)

[vf,vb]=get_scan_voltage(n);
[fi,bi]=get_scan_current(n);
p=strrep(cd,'\','\\');

fn1=strcat('m',num2str(n),'_ori.tf0');
fn2=strcat('m',num2str(n),'_ori.tb0');
fn3=strcat('m',num2str(n),'_ori.tf1');
fn4=strcat('m',num2str(n),'_ori.tb1');

% Topo Map

[xx,yy,tf04]=scala_read(fn1,1);
figure
pcolor(xx,yy,tf04)
colorbar;
shading interp
axis square
title(strcat(p,'\\m',num2str(n),' topo V=',num2str(vf,'%4.3f'),' V',' I=',num2str(fi,'%4.2f'),' nA'))
set(gca,'fontsize',18)

[xx,yy,tb04]=scala_read(fn2,1);

[xx,yy,tf14]=scala_read(fn3,0);
[xx,yy,tb14]=scala_read(fn4,0);

[n1,n2]=size(tf14);

na=3;
for i=1:n1,
    tf14(i,1:na)=tf14(i,na+1);
    tb14(i,n2-na+1:n2)=tb14(i,n2-na);
end

% dI/dV Map Forward

figure
pcolor(xx,yy,tf14)
shading interp
axis square
title(strcat(p,'\\m',num2str(n),' dI/dV V=',num2str(vf,'%4.3f'),' V',' I=',num2str(fi,'%4.2f'),' nA'))
set(gca,'fontsize',18)
a=caxis;
%colorbar;
hold on
%contour(xx,yy,tf04,'k')
hold off
caxis(a)

% dI/dV Map Backward

figure
pcolor(xx,yy,tb14)
shading interp
axis square
title(strcat(p,'\\m',num2str(n),' dI/dV V=',num2str(vb,'%4.3f'),' V',' I=',num2str(bi,'%4.2f'),' nA'))
set(gca,'fontsize',18)
a=caxis;
colorbar;
hold on
%contour(xx,yy,tb04,'k')
hold off
caxis(a)

% Dirac Point Energy Map Forward

figure
tf14=(tf14/5)*.4/.175;  %take care of the I V values
tf14=(tf14*10/8)/2; %take care of the wiggle voltage and sensetivity
tf14=(tf14-1.54559)/-0.01319; % convert dI/dV value to Dirac point Energy (unit meV) using the linear relation from the fit
pcolor(xx,yy,tf14)
shading interp
axis square
title(strcat(p,'\\m',num2str(n),' dI/dV V=',num2str(vf,'%4.3f'),' V',' I=',num2str(fi,'%4.2f'),' nA'))
set(gca,'fontsize',18)
a=caxis;
%colorbar;
hold on
%contour(xx,yy,tf04,'k')
hold off
caxis(a)

% Dirac Point Energy Map Backward

figure
tb14=(tb14/5)*.4/.175;  %take care of the I V values
tb14=(tb14*10/8)/2; %take care of the wiggle voltage and sensetivity
tb14=(tb14-1.54559)/-0.01319; % convert dI/dV value to Dirac point Energy (unit meV) using the linear relation from the fit
pcolor(xx,yy,tb14)
shading interp
axis square
title(strcat(p,'\\m',num2str(n),' dI/dV V=',num2str(vb,'%4.3f'),' V',' I=',num2str(bi,'%4.2f'),' nA'))
set(gca,'fontsize',18)
a=caxis;
colorbar;
hold on
%contour(xx,yy,tb04,'k')
hold off
caxis(a)

% Carrier (Hole) Density Map Forward

figure
tf14=(tf14/5)*.4/.175;  %take care of the I V values
tf14=(tf14*10/8)/2; %take care of the wiggle voltage and sensetivity
tf14=(tf14-1.54559)/-0.01319; % convert dI/dV value to Dirac point Energy (unit meV) using the linear relation from the fit
for i=1:n1
    for j=1:n2
        tf14(i,j)=0.0061*(tf14(i,j))^2; % convert Dirac point Energy (unit meV) to local charge carrier density (unit 1e10 cm^-2) 
                                         %using graphene linear relation
    end
end
pcolor(xx,yy,tf14)
shading interp
axis square
caxis0 1e4;
title(strcat(p,'\\m',num2str(n),' dI/dV V=',num2str(vf,'%4.3f'),' V',' I=',num2str(fi,'%4.2f'),' nA'))
set(gca,'fontsize',18)
a=caxis;
colorbar;
hold on
%contour(xx,yy,tf04,'k')
hold off
caxis(a)

% Carrier (Hole) Density Map Backward

figure
tb14=(tb14/5)*0.4/0.175;  %take care of the I V values
tb14=(tb14*10/8)/2; %take care of the wiggle voltage and sensetivity
tb14=(tb14-1.54559)/-0.01319; % convert dI/dV value to Dirac point Energy (unit meV) using the linear relation from the fit
tb14=0.0061*tb14^2; % convert Dirac point Energy (unit meV) to local charge carrier density (unit 1e10 cm^-2) using graphene linear relation
pcolor(xx,yy,tb14)
shading interp
axis square
title(strcat(p,'\\m',num2str(n),' dI/dV V=',num2str(vb,'%4.3f'),' V',' I=',num2str(bi,'%4.2f'),' nA'))
set(gca,'fontsize',18)
a=caxis;
colorbar;
hold on
%contour(xx,yy,tb04,'k')
hold off
caxis(a)
